/* */

package com.usc.ss12.falldetectionapp;

import android.app.Activity;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.Display;
import android.view.Menu;
import android.view.Surface;

public class MainActivity extends Activity {

    private final SensorManager mSensorManager;
    private final Sensor mAccelerometer;
    
    private Display mDisplay;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    public MainActivity() {
        mSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);
        mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
    }

    protected void onResume() {
        super.onResume();
        mSensorManager.registerListener(this, mAccelerometer, SensorManager.SENSOR_DELAY_NORMAL);
    }

    protected void onPause() {
        super.onPause();
    }

    public void onAccuracyChanged(Sensor sensor, int accuracy) {
    	
    }

    public void onSensorChanged(SensorEvent event) {
      //Right in here is where you put code to read the current sensor values and 
      //update any views you might have that are displaying the sensor information
      //You'd get accelerometer values like this:
      if (event.sensor.getType() != Sensor.TYPE_ACCELEROMETER)
           return;
       float mSensorX, mSensorY;
       
       switch (mDisplay.getRotation()) {
           case Surface.ROTATION_0:
               mSensorX = event.values[0];
               mSensorY = event.values[1];
               break;
           case Surface.ROTATION_90:
               mSensorX = -event.values[1];
               mSensorY = event.values[0];
               break;
           case Surface.ROTATION_180:
               mSensorX = -event.values[0];
               mSensorY = -event.values[1];
               break;
           case Surface.ROTATION_270:
               mSensorX = event.values[1];
               mSensorY = -event.values[0];
        }
    }
    
}
