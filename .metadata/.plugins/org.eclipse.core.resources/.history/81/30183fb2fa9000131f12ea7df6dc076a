/*
 * Code for AccelerometerReader class based on:
 * http://www.anddev.org/accessing_the_accelerometer-t499.html
 */

package com.usc.ss12.falldetectionapp;

import android.hardware.SensorManager;

public class AccelerometerReader {
	
	private boolean accelerometerAvailable = false;
    private boolean isEnabled = false;
    
    private SensorManager sensorManager;

    public AccelerometerReader()
                    throws UnsupportedOperationException {

            /* Check once here in the constructor if an
             * Accelerometer is available on this device. */
            for (Sensor aSensor : mSensorManager.get())
                    if (aSensor.equals(Sensors.SENSOR_ACCELEROMETER))
                            accelerometerAvailable = true;

            if (!accelerometerAvailable)
                    throw new UnsupportedOperationException(
                                    "Accelerometer is not available.");
    }

    /**
     * En/Dis-able the Accelerometer.
     *
     * @param doEnable
     *            <code>true</code> for enable.<br>
     *            <code>false</code> for disable.
     * @throws UnsupportedOperationException
     */
    public void setEnableAccelerometer(boolean doEnable)
                    throws UnsupportedOperationException {
            if (!accelerometerAvailable)
                    throw new UnsupportedOperationException(
                                    "Accelerometer is not available.");

            /* If should be enabled and not already is: */
            if (doEnable && !this.isEnabled) {
                    Sensors.enableSensor(Sensors.SENSOR_ACCELEROMETER);
                    this.isEnabled = true;
            } else /* If should be disabled and not already is: */
            if (!doEnable && this.isEnabled) {
                    Sensors.disableSensor(Sensors.SENSOR_ACCELEROMETER);
                    this.isEnabled = false;
            }
    }

    /**
     * Read out the values currently provided by the Accelerometer.
     *
     * @return the current Accelerometer-values.
     * @throws UnsupportedOperationException
     *             if Accelerometer is not available on this device.
     * @throws IllegalStateException
     *             if Accelerometer was set to disabled.
     */
    public float[] readAccelerometer() throws UnsupportedOperationException, IllegalStateException {
            if (!accelerometerAvailable)
                    throw new UnsupportedOperationException(
                                    "Accelerometer is not available.");

            if (!this.isEnabled)
                    throw new IllegalStateException(
                                    "Accelerometer was set to disabled!");
            /* Get number of sensor-values the sensor will return. Could be
             * variable, depending of the amount of axis (1D, 2D or 3D
             * accelerometer). */
            int sensorValues = Sensors
                            .getNumSensorValues(Sensors.SENSOR_ACCELEROMETER);
            float[] out = new float[sensorValues];

            /* Make the OS fill the array we passed. */
            Sensors.readSensor(Sensors.SENSOR_ACCELEROMETER, out);

            /* And return it. */
            return out;
    }
}
